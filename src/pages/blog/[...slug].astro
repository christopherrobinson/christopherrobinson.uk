---
import Container from '@/components/Container.astro';
import FormattedDate from '@/components/Helpers/FormattedDate.astro';
import Layout from '@/layouts/Default.astro';

export const getStaticPaths = async () => {
  const posts = (await getCollection('blog'))
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

  return posts.map((post, i) => ({
    params: {
      slug: post.slug,
    },
    props: {
      nextPost: i === 0 ? null : posts[i - 1],
      post,
      prevPost: i + 1 === posts.length ? null : posts[i + 1],
    },
  }));
}

const { post, prevPost, nextPost } = Astro.props;
const { data } = post;
const { cover, date, meta, tags, title } = data;
const { remarkPluginFrontmatter, Content } = await post.render();
const backgroundImage = cover && (await getImage({ src: cover }));
---

<Layout heading={(!cover || (cover.width < 1920)) && title} meta={meta}>
  {
    cover && (cover.width >= 1920) && (
      <div class="relative">
        <div
          class={`bg-center  bg-cover  h-60  lg:h-[328px]  w-full`}
          style={{ backgroundImage: `url('${backgroundImage.src}')` }}
        />
        <div class="absolute  bottom-0  left-0  right-0">
          <Container>
            <div class="inline-block  bg-opacity-80  bg-zinc-900  -ml-6  p-6">
              <h1 class="font-medium  text-2xl  text-white">{title}</h1>
            </div>
          </Container>
        </div>
      </div>
    )
  }
  <Container>
    <div class="gap-4  grid  grid-cols-1  lg:gap-8  lg:grid-cols-12">
      <div class="col-span-1  py-5  lg:py-16  lg:col-span-2">
        <div class="lg:sticky  lg:top-[139px]">
          <ul class="grid  grid-cols-2  justify-between  text-sm  sm:grid-cols-3  lg:block  lg:space-y-2">
            <li class="flex  items-start  mb-2  lg:mb-0">
              <span class="flex  items-center  justify-center  h-5  mr-2  w-4">
                <Icon class="text-zinc-600  h-4" name="calendar-day" />
              </span>
              <FormattedDate date={date} />
            </li>
            <li class="flex  items-start  mb-2  lg:mb-0">
              <span class="flex  items-center  justify-center  h-5  mr-2  w-4">
                <Icon class="text-zinc-600  h-4" name="stopwatch" />
              </span>
              {remarkPluginFrontmatter.minutesRead} read
            </li>
            <li class="col-span-2  flex  items-start  sm:col-span-1">
              <span class="flex  items-center  justify-center  h-5  mr-2  w-4">
                <Icon class="text-zinc-600  h-4" name="tag" />
              </span>
              <ol class="flex  flex-wrap  -mx-0.5">
                {tags.map((tag, i, tags) => (
                  <li class={`
                    ${((i + 1 !== tags.length) ? `after:content-[',']` : '')}
                    mx-0.5
                    `}><a class="hover:underline" href={`/blog/tag/${createSlug(tag)}/`}>{tag}</a></li>
                ))}
              </ol>
            </li>
          </ul>
        </div>
      </div>
      <div class="col-span-1  max-w-none  -mt-16  prose  py-8  lg:-mt-0  md:prose-md  lg:col-span-10  lg:prose-lg  lg:py-16">
        {(new Date().setMonth(new Date().getMonth() - 3) > date) && (
          <div class="bg-amber-100  border  border-amber-200  p-3  rounded-md  text-amber-800  text-center  text-sm">
            <strong class="text-amber-800">Note:</strong> This post is over 3 months old and may be outdated or superseded by additional information.
          </div>
        )}
        <Content />
      </div>
    </div>
  </Container>
  <div class="bg-zinc-100  border-t  border-zinc-200  mt-auto  py-8  sm:py-12">
    <Container>
      <div class="grid  grid-cols-11">
        <div class="col-span-5  flex  items-center  justify-start">
          {nextPost && (
            <a class="flex  items-center  justify-start  hover:text-primary  hover:underline" href={`/blog/${nextPost.slug}/`}>
              <Icon class="mr-1  size-3" name="chevron-left" />
              {nextPost.data.title}
            </a>
          )}
        </div>
        <div class="flex  items-center  justify-center">
          <a class="hover:text-primary" href="/blog/">
            <Icon class="size-5" name="grid-2" />
          </a>
        </div>
        <div class="col-span-5  flex  items-center  justify-end">
          {prevPost && (
            <a class="flex  items-center  justify-end  hover:text-primary  hover:underline" href={`/blog/${prevPost.slug}/`}>
              {prevPost.data.title}
              <Icon class="ml-1  size-3" name="chevron-right" />
            </a>
          )}
        </div>
      </div>
    </Container>
  </div>
</Layout>
