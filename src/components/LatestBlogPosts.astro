---
import { getCollection } from 'astro:content';
import BlogPostCard from '@/components/BlogPostCard.astro';
import Container from '@/components/Container.astro';

export interface Props {
  heading?: string;
  limit?: number;
}

const { heading, limit } = Astro.props;
const posts = (await getCollection('blog'))
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
    .slice(0, limit ?? 3);
---

<div class="bg-zinc-100  border-t  border-zinc-200  mt-auto  py-8  sm:py-12">
  <Container>
    {heading && (
      <div class="flex  items-baseline  justify-between  mb-8  sm:mb-12">
        <h2 class="font-extralight  text-2xl  lg:text-3xl">{heading}</h2>
        <a
          class="flex  items-center  justify-end  hover:text-primary  hover:underline"
          href="/blog/"
        >
          View all
          <svg
            class="ml-1  size-3"
            viewBox="0 0 320 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M299.3 244.7c6.2 6.2 6.2 16.4 0 22.6l-192 192c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6L265.4 256 84.7 75.3c-6.2-6.2-6.2-16.4 0-22.6s16.4-6.2 22.6 0l192 192z"
              fill="currentcolor"
            />
          </svg>
        </a>
      </div>
    )}
    <div class="gap-4  grid  lg:gap-12  lg:grid-cols-3">
      {
        posts.map(async (post) => {
          const { data, slug } = post
          const { cover, date, title } = data
          const { remarkPluginFrontmatter } = await post.render()

          return (
            <BlogPostCard
              cover={cover}
              date={date}
              excerpt={remarkPluginFrontmatter.excerpt}
              minutesRead={remarkPluginFrontmatter.minutesRead}
              slug={slug}
              title={title}
            />
          )
        })
      }
    </div>
  </Container>
</div>
