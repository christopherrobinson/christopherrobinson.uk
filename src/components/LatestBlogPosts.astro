---
import BlogPostCard from '@/components/BlogPostCard.astro';
import Container from '@/components/Container.astro';

export interface LatestBlogPostsProps {
  heading?: string;
  limit?: number;
}

const { heading, limit } = Astro.props;
const posts = (await getCollection('blog'))
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, limit ?? 3);
---

<div class="bg-zinc-100  border-t  border-zinc-200  mt-auto  py-8  text-zinc-800  sm:py-16">
  <Container>
    {heading && (
      <div class="flex  items-baseline  justify-between  mb-8  sm:mb-16">
        <h2 class="font-extralight  text-2xl  lg:text-3xl">{heading}</h2>
        <a
          class="flex  items-center  justify-end  text-zinc-600  hover:text-zinc-600  hover:underline"
          href="/blog/"
        >
          View all
          <Icon class="ml-1  size-3" name="chevron-right" />
        </a>
      </div>
    )}
    <div class="gap-4  grid  lg:gap-8  lg:grid-cols-3">
      {posts.map(async (post) => {
        const { data, slug } = post
        const { cover, date, title } = data
        const { remarkPluginFrontmatter } = await post.render()

        return (
          <BlogPostCard
            cover={cover}
            date={date}
            excerpt={remarkPluginFrontmatter.excerpt}
            minutesRead={remarkPluginFrontmatter.minutesRead}
            slug={slug}
            title={title}
          />
        )
      })}
    </div>
  </Container>
</div>
